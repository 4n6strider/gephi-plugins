/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StreamingServerPanel.java
 *
 * Created on Jun 13, 2010, 6:45:46 PM
 */

package org.gephi.desktop.streaming;

import org.openide.util.Lookup;

/**
 *
 * @author panisson
 */
public class StreamingServerPanel extends javax.swing.JPanel {

    private StreamingController controller;

    /** Creates new form StreamingServerPanel */
    public StreamingServerPanel() {
        initComponents();
        controller = Lookup.getDefault().lookup(StreamingController.class);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startStopButton = new javax.swing.JButton();
        configureButton = new javax.swing.JButton();

        startStopButton.setText(org.openide.util.NbBundle.getMessage(StreamingServerPanel.class, "StreamingServerPanel.startStopButton.text")); // NOI18N
        startStopButton.setToolTipText(org.openide.util.NbBundle.getMessage(StreamingServerPanel.class, "StreamingServerPanel.startStopButton.toolTipText")); // NOI18N
        startStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopButtonActionPerformed(evt);
            }
        });

        configureButton.setText(org.openide.util.NbBundle.getMessage(StreamingServerPanel.class, "StreamingServerPanel.configureButton.text")); // NOI18N
        configureButton.setToolTipText(org.openide.util.NbBundle.getMessage(StreamingServerPanel.class, "StreamingServerPanel.configureButton.toolTipText")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                .addComponent(configureButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startStopButton)
                    .addComponent(configureButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopButtonActionPerformed
        StreamingModel model = controller.getStreamingModel();
        if (model.isServerRunning()) {
            controller.stopServer();
            startStopButton.setText(org.openide.util.NbBundle.getMessage(StreamingServerPanel.class, "StreamingServerPanel.startStopButton.text"));
        } else {
            controller.exposeWorkspaceAsStream();
            startStopButton.setText("Stop");
        }
    }//GEN-LAST:event_startStopButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton configureButton;
    private javax.swing.JButton startStopButton;
    // End of variables declaration//GEN-END:variables

}
